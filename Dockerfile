FROM ruby:3.1.2 AS builder

ENV RAILS_LOG_TO_STDOUT=true
ENV RAILS_SERVE_STATIC_FILES=true
ARG RAILS_ENV
ENV RAILS_ENV=${RAILS_ENV}
ARG SECRET_KEY_BASE
ENV SECRET_KEY_BASE=${SECRET_KEY_BASE}
ARG PRIMARY_DB_USERNAME
ENV PRIMARY_DB_USERNAME=${PRIMARY_DB_USERNAME}
ARG PRIMARY_DB_PASSWORD
ENV PRIMARY_DB_PASSWORD=${PRIMARY_DB_PASSWORD}
ARG PRIMARY_DB_PORT
ENV PRIMARY_DB_PORT=${PRIMARY_DB_PORT}
ARG PRIMARY_DB_HOST
ENV PRIMARY_DB_HOST=${PRIMARY_DB_HOST}
ARG PRIMARY_DB_NAME
ENV PRIMARY_DB_NAME=${PRIMARY_DB_NAME}
ARG REDIS_HOST
ENV REDIS_HOST=${REDIS_HOST}
ARG REDIS_PORT
ENV REDIS_PORT=${REDIS_PORT}
ARG REDIS_AUTH_STRING
ENV REDIS_AUTH_STRING=${REDIS_AUTH_STRING}
ARG REDIS_USERNAME
ENV REDIS_USERNAME=${REDIS_USERNAME}
ARG GCP_PROJECT_ID
ENV GCP_PROJECT_ID=${GCP_PROJECT_ID}
ARG GCP_TASK_QUEUE
ENV GCP_TASK_QUEUE=${GCP_TASK_QUEUE}
ARG REGION
ENV REGION=${REGION}
ARG GCP_TASK_SERVICE_EMAIL
ENV GCP_TASK_SERVICE_EMAIL=${GCP_TASK_SERVICE_EMAIL}

RUN gem uninstall bundler
RUN gem install bundler -v 2.3.24 --no-document

WORKDIR /app
COPY Gemfile Gemfile.lock /app/

RUN bundle install

# Copy the application codes
COPY . /app/

# Precompiling assets for production without requiring secret RAILS_MASTER_KEY
RUN SECRET_KEY_BASE=`rake secret` bundle exec rails assets:precompile

COPY docker-entrypoint.sh /usr/local/bin/
RUN chmod +x /usr/local/bin/docker-entrypoint.sh
ENTRYPOINT ["docker-entrypoint.sh"]

# Configure the main process to run when running the image
CMD ["rails", "server", "-b", "0.0.0.0"]
